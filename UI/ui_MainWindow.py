# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1260, 796)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget_plot = QtWidgets.QWidget(self.centralwidget)
        self.widget_plot.setObjectName("widget_plot")
        self.verticalLayout.addWidget(self.widget_plot)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dockWidget = QtWidgets.QDockWidget(MainWindow)
        self.dockWidget.setEnabled(True)
        self.dockWidget.setFloating(False)
        self.dockWidget.setObjectName("dockWidget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.treeWidget_dataManage = QtWidgets.QTreeWidget(self.dockWidgetContents)
        self.treeWidget_dataManage.setObjectName("treeWidget_dataManage")
        self.verticalLayout_3.addWidget(self.treeWidget_dataManage)
        self.pushButton = QtWidgets.QPushButton(self.dockWidgetContents)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_3.addWidget(self.pushButton)
        self.dockWidget.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockWidget)
        self.dockWidget_2 = QtWidgets.QDockWidget(MainWindow)
        self.dockWidget_2.setMouseTracking(False)
        self.dockWidget_2.setFloating(False)
        self.dockWidget_2.setObjectName("dockWidget_2")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.textBrowser_printLog = QtWidgets.QTextBrowser(self.dockWidgetContents_2)
        self.textBrowser_printLog.setObjectName("textBrowser_printLog")
        self.verticalLayout_2.addWidget(self.textBrowser_printLog)
        self.dockWidget_2.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockWidget_2)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1260, 22))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menuINS = QtWidgets.QMenu(self.menu_2)
        self.menuINS.setObjectName("menuINS")
        self.menuGNSS = QtWidgets.QMenu(self.menu_2)
        self.menuGNSS.setObjectName("menuGNSS")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        self.menu_8 = QtWidgets.QMenu(self.menu_4)
        self.menu_8.setObjectName("menu_8")
        self.menu_6 = QtWidgets.QMenu(self.menubar)
        self.menu_6.setObjectName("menu_6")
        MainWindow.setMenuBar(self.menubar)
        self.action_importRef = QtWidgets.QAction(MainWindow)
        self.action_importRef.setObjectName("action_importRef")
        self.actionINS = QtWidgets.QAction(MainWindow)
        self.actionINS.setObjectName("actionINS")
        self.actionGNSS = QtWidgets.QAction(MainWindow)
        self.actionGNSS.setObjectName("actionGNSS")
        self.action_importScenes = QtWidgets.QAction(MainWindow)
        self.action_importScenes.setObjectName("action_importScenes")
        self.action_setPlotView = QtWidgets.QAction(MainWindow)
        self.action_setPlotView.setObjectName("action_setPlotView")
        self.action_4 = QtWidgets.QAction(MainWindow)
        self.action_4.setObjectName("action_4")
        self.actionGNSS_4 = QtWidgets.QAction(MainWindow)
        self.actionGNSS_4.setObjectName("actionGNSS_4")
        self.actionINS_multiPlot = QtWidgets.QAction(MainWindow)
        self.actionINS_multiPlot.setObjectName("actionINS_multiPlot")
        self.action_ins_coor_by_time = QtWidgets.QAction(MainWindow)
        self.action_ins_coor_by_time.setObjectName("action_ins_coor_by_time")
        self.action_ins_pos_by_time = QtWidgets.QAction(MainWindow)
        self.action_ins_pos_by_time.setObjectName("action_ins_pos_by_time")
        self.action_ins_neg_vel_by_time = QtWidgets.QAction(MainWindow)
        self.action_ins_neg_vel_by_time.setObjectName("action_ins_neg_vel_by_time")
        self.action_ins_frd_vel_by_time = QtWidgets.QAction(MainWindow)
        self.action_ins_frd_vel_by_time.setObjectName("action_ins_frd_vel_by_time")
        self.action_bias_by_time = QtWidgets.QAction(MainWindow)
        self.action_bias_by_time.setObjectName("action_bias_by_time")
        self.action_imu_by_time = QtWidgets.QAction(MainWindow)
        self.action_imu_by_time.setObjectName("action_imu_by_time")
        self.action_kalman_p = QtWidgets.QAction(MainWindow)
        self.action_kalman_p.setObjectName("action_kalman_p")
        self.action_install_error = QtWidgets.QAction(MainWindow)
        self.action_install_error.setObjectName("action_install_error")
        self.action_kalman_x = QtWidgets.QAction(MainWindow)
        self.action_kalman_x.setObjectName("action_kalman_x")
        self.action_14 = QtWidgets.QAction(MainWindow)
        self.action_14.setObjectName("action_14")
        self.action_15 = QtWidgets.QAction(MainWindow)
        self.action_15.setObjectName("action_15")
        self.action_16 = QtWidgets.QAction(MainWindow)
        self.action_16.setObjectName("action_16")
        self.action_17 = QtWidgets.QAction(MainWindow)
        self.action_17.setObjectName("action_17")
        self.action_18 = QtWidgets.QAction(MainWindow)
        self.action_18.setObjectName("action_18")
        self.actionGPS = QtWidgets.QAction(MainWindow)
        self.actionGPS.setObjectName("actionGPS")
        self.actionGNSS_gpsQuality = QtWidgets.QAction(MainWindow)
        self.actionGNSS_gpsQuality.setCheckable(False)
        self.actionGNSS_gpsQuality.setChecked(False)
        self.actionGNSS_gpsQuality.setObjectName("actionGNSS_gpsQuality")
        self.actionGNSS_timeGap = QtWidgets.QAction(MainWindow)
        self.actionGNSS_timeGap.setCheckable(False)
        self.actionGNSS_timeGap.setObjectName("actionGNSS_timeGap")
        self.actionGNSS_ageDiff = QtWidgets.QAction(MainWindow)
        self.actionGNSS_ageDiff.setCheckable(False)
        self.actionGNSS_ageDiff.setObjectName("actionGNSS_ageDiff")
        self.action_gpsQualityPosError1 = QtWidgets.QAction(MainWindow)
        self.action_gpsQualityPosError1.setCheckable(False)
        self.action_gpsQualityPosError1.setObjectName("action_gpsQualityPosError1")
        self.action_posError1 = QtWidgets.QAction(MainWindow)
        self.action_posError1.setCheckable(False)
        self.action_posError1.setChecked(False)
        self.action_posError1.setObjectName("action_posError1")
        self.action_velError1 = QtWidgets.QAction(MainWindow)
        self.action_velError1.setObjectName("action_velError1")
        self.action_angleError1 = QtWidgets.QAction(MainWindow)
        self.action_angleError1.setEnabled(True)
        self.action_angleError1.setObjectName("action_angleError1")
        self.action_importTest = QtWidgets.QAction(MainWindow)
        self.action_importTest.setObjectName("action_importTest")
        self.action_staristics_INS = QtWidgets.QAction(MainWindow)
        self.action_staristics_INS.setObjectName("action_staristics_INS")
        self.action_staristics_GNSS = QtWidgets.QAction(MainWindow)
        self.action_staristics_GNSS.setObjectName("action_staristics_GNSS")
        self.action_convertTime = QtWidgets.QAction(MainWindow)
        self.action_convertTime.setObjectName("action_convertTime")
        self.action_calDistiance = QtWidgets.QAction(MainWindow)
        self.action_calDistiance.setObjectName("action_calDistiance")
        self.action_27 = QtWidgets.QAction(MainWindow)
        self.action_27.setEnabled(False)
        self.action_27.setObjectName("action_27")
        self.action_sotif_statistics = QtWidgets.QAction(MainWindow)
        self.action_sotif_statistics.setObjectName("action_sotif_statistics")
        self.action_29 = QtWidgets.QAction(MainWindow)
        self.action_29.setObjectName("action_29")
        self.action_30 = QtWidgets.QAction(MainWindow)
        self.action_30.setObjectName("action_30")
        self.action_introduction = QtWidgets.QAction(MainWindow)
        self.action_introduction.setObjectName("action_introduction")
        self.action_refresh = QtWidgets.QAction(MainWindow)
        self.action_refresh.setObjectName("action_refresh")
        self.action_1_NMEA = QtWidgets.QAction(MainWindow)
        self.action_1_NMEA.setObjectName("action_1_NMEA")
        self.action_CSV_NMEA = QtWidgets.QAction(MainWindow)
        self.action_CSV_NMEA.setEnabled(False)
        self.action_CSV_NMEA.setObjectName("action_CSV_NMEA")
        self.actionCAN = QtWidgets.QAction(MainWindow)
        self.actionCAN.setEnabled(False)
        self.actionCAN.setObjectName("actionCAN")
        self.action_cdfError1 = QtWidgets.QAction(MainWindow)
        self.action_cdfError1.setObjectName("action_cdfError1")
        self.action_INS_mat = QtWidgets.QAction(MainWindow)
        self.action_INS_mat.setObjectName("action_INS_mat")
        self.action22 = QtWidgets.QAction(MainWindow)
        self.action22.setObjectName("action22")
        self.actionINS_3 = QtWidgets.QAction(MainWindow)
        self.actionINS_3.setObjectName("actionINS_3")
        self.actionINS_4 = QtWidgets.QAction(MainWindow)
        self.actionINS_4.setObjectName("actionINS_4")
        self.actionINS_6 = QtWidgets.QAction(MainWindow)
        self.actionINS_6.setObjectName("actionINS_6")
        self.action_cdfError1_2 = QtWidgets.QAction(MainWindow)
        self.action_cdfError1_2.setObjectName("action_cdfError1_2")
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.actionGNSS_multiPlot = QtWidgets.QAction(MainWindow)
        self.actionGNSS_multiPlot.setObjectName("actionGNSS_multiPlot")
        self.actionGNSS_7 = QtWidgets.QAction(MainWindow)
        self.actionGNSS_7.setObjectName("actionGNSS_7")
        self.actionGNSS_8 = QtWidgets.QAction(MainWindow)
        self.actionGNSS_8.setObjectName("actionGNSS_8")
        self.actionGNSS_9 = QtWidgets.QAction(MainWindow)
        self.actionGNSS_9.setObjectName("actionGNSS_9")
        self.action_2 = QtWidgets.QAction(MainWindow)
        self.action_2.setObjectName("action_2")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.action_5 = QtWidgets.QAction(MainWindow)
        self.action_5.setObjectName("action_5")
        self.action_13 = QtWidgets.QAction(MainWindow)
        self.action_13.setObjectName("action_13")
        self.actionGNSS_gpsQualityPosError = QtWidgets.QAction(MainWindow)
        self.actionGNSS_gpsQualityPosError.setCheckable(False)
        self.actionGNSS_gpsQualityPosError.setChecked(False)
        self.actionGNSS_gpsQualityPosError.setObjectName("actionGNSS_gpsQualityPosError")
        self.actionGNSS_posError = QtWidgets.QAction(MainWindow)
        self.actionGNSS_posError.setCheckable(False)
        self.actionGNSS_posError.setChecked(False)
        self.actionGNSS_posError.setObjectName("actionGNSS_posError")
        self.actionGNSS_velError = QtWidgets.QAction(MainWindow)
        self.actionGNSS_velError.setCheckable(False)
        self.actionGNSS_velError.setChecked(False)
        self.actionGNSS_velError.setObjectName("actionGNSS_velError")
        self.actionGNSS_angleError = QtWidgets.QAction(MainWindow)
        self.actionGNSS_angleError.setCheckable(False)
        self.actionGNSS_angleError.setChecked(False)
        self.actionGNSS_angleError.setObjectName("actionGNSS_angleError")
        self.actionGNSS_cdfError = QtWidgets.QAction(MainWindow)
        self.actionGNSS_cdfError.setObjectName("actionGNSS_cdfError")
        self.action_loc_error = QtWidgets.QAction(MainWindow)
        self.action_loc_error.setObjectName("action_loc_error")
        self.action_neg_vel_error = QtWidgets.QAction(MainWindow)
        self.action_neg_vel_error.setObjectName("action_neg_vel_error")
        self.action_pos_error = QtWidgets.QAction(MainWindow)
        self.action_pos_error.setObjectName("action_pos_error")
        self.action_coor_error = QtWidgets.QAction(MainWindow)
        self.action_coor_error.setObjectName("action_coor_error")
        self.action_traj = QtWidgets.QAction(MainWindow)
        self.action_traj.setObjectName("action_traj")
        self.action_gps_status_precent = QtWidgets.QAction(MainWindow)
        self.action_gps_status_precent.setObjectName("action_gps_status_precent")
        self.action_ins_by_time = QtWidgets.QAction(MainWindow)
        self.action_ins_by_time.setObjectName("action_ins_by_time")
        self.action_frd_vel_error = QtWidgets.QAction(MainWindow)
        self.action_frd_vel_error.setObjectName("action_frd_vel_error")
        self.action_mile_error = QtWidgets.QAction(MainWindow)
        self.action_mile_error.setObjectName("action_mile_error")
        self.action_errorbias = QtWidgets.QAction(MainWindow)
        self.action_errorbias.setObjectName("action_errorbias")
        self.action_gps_error = QtWidgets.QAction(MainWindow)
        self.action_gps_error.setObjectName("action_gps_error")
        self.action_acc_xyz = QtWidgets.QAction(MainWindow)
        self.action_acc_xyz.setObjectName("action_acc_xyz")
        self.action_grox_xyz = QtWidgets.QAction(MainWindow)
        self.action_grox_xyz.setObjectName("action_grox_xyz")
        self.action_wheel_speed = QtWidgets.QAction(MainWindow)
        self.action_wheel_speed.setObjectName("action_wheel_speed")
        self.action_timeGap_acc_grox = QtWidgets.QAction(MainWindow)
        self.action_timeGap_acc_grox.setObjectName("action_timeGap_acc_grox")
        self.action_timeGap_imu_gps = QtWidgets.QAction(MainWindow)
        self.action_timeGap_imu_gps.setObjectName("action_timeGap_imu_gps")
        self.action_INS_plot_all = QtWidgets.QAction(MainWindow)
        self.action_INS_plot_all.setObjectName("action_INS_plot_all")
        self.action_GNSS_plot_all = QtWidgets.QAction(MainWindow)
        self.action_GNSS_plot_all.setObjectName("action_GNSS_plot_all")
        self.action_vel_wheelSpeed = QtWidgets.QAction(MainWindow)
        self.action_vel_wheelSpeed.setObjectName("action_vel_wheelSpeed")
        self.action_timeGap_gps_imu = QtWidgets.QAction(MainWindow)
        self.action_timeGap_gps_imu.setObjectName("action_timeGap_gps_imu")
        self.action_pcpng2bin = QtWidgets.QAction(MainWindow)
        self.action_pcpng2bin.setObjectName("action_pcpng2bin")
        self.menu.addAction(self.action_importRef)
        self.menu.addAction(self.action_importTest)
        self.menu.addAction(self.action_importScenes)
        self.menuINS.addAction(self.action_loc_error)
        self.menuINS.addAction(self.action_neg_vel_error)
        self.menuINS.addAction(self.action_frd_vel_error)
        self.menuINS.addAction(self.action_wheel_speed)
        self.menuINS.addAction(self.action_vel_wheelSpeed)
        self.menuINS.addAction(self.action_pos_error)
        self.menuINS.addAction(self.action_coor_error)
        self.menuINS.addAction(self.action_mile_error)
        self.menuINS.addAction(self.action_acc_xyz)
        self.menuINS.addAction(self.action_grox_xyz)
        self.menuINS.addSeparator()
        self.menuINS.addAction(self.action_ins_by_time)
        self.menuINS.addAction(self.action_timeGap_acc_grox)
        self.menuINS.addAction(self.action_traj)
        self.menuINS.addAction(self.action_kalman_p)
        self.menuINS.addAction(self.action_kalman_x)
        self.menuINS.addAction(self.action_bias_by_time)
        self.menuINS.addAction(self.action_gps_status_precent)
        self.menuINS.addAction(self.action_errorbias)
        self.menuINS.addAction(self.action_gps_error)
        self.menuINS.addAction(self.action_timeGap_gps_imu)
        self.menuGNSS.addAction(self.actionGNSS_gpsQuality)
        self.menuGNSS.addAction(self.actionGNSS_timeGap)
        self.menuGNSS.addAction(self.actionGNSS_ageDiff)
        self.menuGNSS.addSeparator()
        self.menuGNSS.addAction(self.actionGNSS_gpsQualityPosError)
        self.menuGNSS.addAction(self.actionGNSS_posError)
        self.menuGNSS.addAction(self.actionGNSS_velError)
        self.menuGNSS.addAction(self.actionGNSS_angleError)
        self.menuGNSS.addSeparator()
        self.menuGNSS.addAction(self.actionGNSS_cdfError)
        self.menu_2.addAction(self.action_setPlotView)
        self.menu_2.addAction(self.menuINS.menuAction())
        self.menu_2.addAction(self.actionINS_multiPlot)
        self.menu_2.addAction(self.menuGNSS.menuAction())
        self.menu_2.addAction(self.actionGNSS_multiPlot)
        self.menu_2.addAction(self.action_INS_plot_all)
        self.menu_2.addAction(self.action_GNSS_plot_all)
        self.menu_3.addAction(self.action_staristics_INS)
        self.menu_3.addAction(self.action_staristics_GNSS)
        self.menu_8.addAction(self.action_INS_mat)
        self.menu_4.addAction(self.action_convertTime)
        self.menu_4.addAction(self.action_calDistiance)
        self.menu_4.addAction(self.menu_8.menuAction())
        self.menu_4.addAction(self.action_sotif_statistics)
        self.menu_4.addAction(self.action_pcpng2bin)
        self.menu_4.addAction(self.action_27)
        self.menu_4.addAction(self.actionCAN)
        self.menu_6.addAction(self.action_introduction)
        self.menu_6.addAction(self.action_refresh)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())
        self.menubar.addAction(self.menu_6.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "数据解析分析工具V3.5  Powered by 算法部"))
        self.dockWidget.setWindowTitle(_translate("MainWindow", "数据管理窗口"))
        self.treeWidget_dataManage.headerItem().setText(0, _translate("MainWindow", "数据列表"))
        self.pushButton.setText(_translate("MainWindow", "重新绘制轨迹图"))
        self.dockWidget_2.setWindowTitle(_translate("MainWindow", "日志打印窗口"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.menu_2.setTitle(_translate("MainWindow", "视图"))
        self.menuINS.setTitle(_translate("MainWindow", "INS单图绘制"))
        self.menuGNSS.setTitle(_translate("MainWindow", "GNSS单图绘制"))
        self.menu_3.setTitle(_translate("MainWindow", "统计"))
        self.menu_4.setTitle(_translate("MainWindow", "小工具"))
        self.menu_8.setTitle(_translate("MainWindow", "数据格式转换工具"))
        self.menu_6.setTitle(_translate("MainWindow", "帮助"))
        self.action_importRef.setText(_translate("MainWindow", "导入参考文件"))
        self.actionINS.setText(_translate("MainWindow", "INS"))
        self.actionGNSS.setText(_translate("MainWindow", "GNSS"))
        self.action_importScenes.setText(_translate("MainWindow", "配置场景"))
        self.action_setPlotView.setText(_translate("MainWindow", "设置"))
        self.action_4.setText(_translate("MainWindow", "统计误差分布图"))
        self.actionGNSS_4.setText(_translate("MainWindow", "GNSS静态测试靶心图"))
        self.actionINS_multiPlot.setText(_translate("MainWindow", "INS综合误差统计图绘制"))
        self.action_ins_coor_by_time.setText(_translate("MainWindow", "坐标（纬度、经度、高度）历元分布图"))
        self.action_ins_pos_by_time.setText(_translate("MainWindow", "姿态（横滚、俯仰、航向）历元分布图"))
        self.action_ins_neg_vel_by_time.setText(_translate("MainWindow", "速度（北、东、地）历元分布图"))
        self.action_ins_frd_vel_by_time.setText(_translate("MainWindow", "速度（前（4轮轮速）、右、下）历元分布图"))
        self.action_bias_by_time.setText(_translate("MainWindow", "零偏历元分布图"))
        self.action_imu_by_time.setText(_translate("MainWindow", "六轴imu历元分布图 "))
        self.action_kalman_p.setText(_translate("MainWindow", "Kalman.P历元分布图"))
        self.action_install_error.setText(_translate("MainWindow", "安装误差 "))
        self.action_kalman_x.setText(_translate("MainWindow", "Kalman.X历元分布图"))
        self.action_14.setText(_translate("MainWindow", "位置误差(横向、纵向、水平)历元分布图"))
        self.action_15.setText(_translate("MainWindow", "速度误差(北东地、前右下)历元分布图"))
        self.action_16.setText(_translate("MainWindow", "姿态误差（横滚、俯仰、航向）历元分布图"))
        self.action_17.setText(_translate("MainWindow", "坐标误差(纬度、经度、高度) 历元分布图"))
        self.action_18.setText(_translate("MainWindow", "同步数据轨迹图"))
        self.actionGPS.setText(_translate("MainWindow", "GPS解状态占比饼状图"))
        self.actionGNSS_gpsQuality.setText(_translate("MainWindow", "解状态占比饼状图"))
        self.actionGNSS_timeGap.setText(_translate("MainWindow", "历元间隔分布图"))
        self.actionGNSS_ageDiff.setText(_translate("MainWindow", "差分龄期统计图"))
        self.action_gpsQualityPosError1.setText(_translate("MainWindow", "解状态水平误差序列图"))
        self.action_posError1.setText(_translate("MainWindow", "位置误差(横向、纵向、水平)历元分布图"))
        self.action_velError1.setText(_translate("MainWindow", "速度误差(前向)历元分布图"))
        self.action_angleError1.setText(_translate("MainWindow", "姿态误差(航向)历元分布图"))
        self.action_importTest.setText(_translate("MainWindow", "导入测试文件"))
        self.action_staristics_INS.setText(_translate("MainWindow", "输出INS统计报告"))
        self.action_staristics_GNSS.setText(_translate("MainWindow", "输出GNSS统计报告"))
        self.action_convertTime.setText(_translate("MainWindow", "时间转换工具\n"
""))
        self.action_calDistiance.setText(_translate("MainWindow", "角度和距离计算工具"))
        self.action_27.setText(_translate("MainWindow", "频率抽稀工具"))
        self.action_sotif_statistics.setText(_translate("MainWindow", "SOTIF完好性统计"))
        self.action_29.setText(_translate("MainWindow", "数据管理窗口"))
        self.action_30.setText(_translate("MainWindow", "日志打印窗口"))
        self.action_introduction.setText(_translate("MainWindow", "使用说明"))
        self.action_refresh.setText(_translate("MainWindow", "版本更新"))
        self.action_1_NMEA.setText(_translate("MainWindow", "导远INS格式转NMEA"))
        self.action_CSV_NMEA.setText(_translate("MainWindow", "自定义CSV格式转NMEA"))
        self.actionCAN.setText(_translate("MainWindow", "CAN 数据解析"))
        self.action_cdfError1.setText(_translate("MainWindow", "统计误差CDF分布图"))
        self.action_INS_mat.setText(_translate("MainWindow", "导远INS格式转.mat"))
        self.action22.setText(_translate("MainWindow", "22"))
        self.actionINS_3.setText(_translate("MainWindow", "INS 原始数据历元分布图"))
        self.actionINS_4.setText(_translate("MainWindow", "INS 误差历元分布图"))
        self.actionINS_6.setText(_translate("MainWindow", "INS 其他相关图"))
        self.action_cdfError1_2.setText(_translate("MainWindow", "统计误差CDF分布图"))
        self.action.setText(_translate("MainWindow", "GNSS综合误差统计图绘制"))
        self.actionGNSS_multiPlot.setText(_translate("MainWindow", "GNSS综合误差统计图绘制"))
        self.actionGNSS_7.setText(_translate("MainWindow", "GNSS解状态占比饼状图"))
        self.actionGNSS_8.setText(_translate("MainWindow", "GNSS 历元间隔分布图"))
        self.actionGNSS_9.setText(_translate("MainWindow", "GNSS 差分龄期统计图"))
        self.action_2.setText(_translate("MainWindow", "解状态水平误差序列图"))
        self.action_3.setText(_translate("MainWindow", "位置误差(横向、纵向、水平)历元分布图"))
        self.action_5.setText(_translate("MainWindow", "姿态误差(航向)历元分布图"))
        self.action_13.setText(_translate("MainWindow", "速度误差(前向)历元分布图"))
        self.actionGNSS_gpsQualityPosError.setText(_translate("MainWindow", "解状态水平误差序列图"))
        self.actionGNSS_posError.setText(_translate("MainWindow", "位置误差(横向、纵向、水平)历元分布图"))
        self.actionGNSS_velError.setText(_translate("MainWindow", "速度误差(前向)历元分布图"))
        self.actionGNSS_angleError.setText(_translate("MainWindow", "姿态误差(航向)历元分布图"))
        self.actionGNSS_cdfError.setText(_translate("MainWindow", "统计误差CDF分布图"))
        self.action_loc_error.setText(_translate("MainWindow", "位置误差(横向、纵向、水平)历元分布图"))
        self.action_neg_vel_error.setText(_translate("MainWindow", "速度误差(北、东、地)历元分布图"))
        self.action_pos_error.setText(_translate("MainWindow", "姿态误差（横滚、俯仰、航向）历元分布图"))
        self.action_coor_error.setText(_translate("MainWindow", "坐标误差(纬度、经度、高度) 历元分布图"))
        self.action_traj.setText(_translate("MainWindow", "同步数据轨迹图"))
        self.action_gps_status_precent.setText(_translate("MainWindow", "GPS解状态占比饼状图"))
        self.action_ins_by_time.setText(_translate("MainWindow", "历元间隔分布图"))
        self.action_frd_vel_error.setText(_translate("MainWindow", "速度误差(前、右、下)历元分布图"))
        self.action_mile_error.setText(_translate("MainWindow", "里程（前右下）历元分布图"))
        self.action_errorbias.setText(_translate("MainWindow", "统计误差分布图"))
        self.action_gps_error.setText(_translate("MainWindow", "GPS偏差对比图"))
        self.action_acc_xyz.setText(_translate("MainWindow", "加表(XYZ)历元分布图"))
        self.action_grox_xyz.setText(_translate("MainWindow", "陀螺(XYZ)历元分布图"))
        self.action_wheel_speed.setText(_translate("MainWindow", "轮速历元分布图"))
        self.action_timeGap_acc_grox.setText(_translate("MainWindow", "加表陀螺历元间隔分布图"))
        self.action_timeGap_imu_gps.setText(_translate("MainWindow", "相邻IMU-GPS时间间隔图"))
        self.action_INS_plot_all.setText(_translate("MainWindow", "绘制INS所有图"))
        self.action_GNSS_plot_all.setText(_translate("MainWindow", "绘制GNSS所有图"))
        self.action_vel_wheelSpeed.setText(_translate("MainWindow", "速度轮速对比历元分布图"))
        self.action_timeGap_gps_imu.setText(_translate("MainWindow", "相邻GPS-IMU时间间隔图"))
        self.action_pcpng2bin.setText(_translate("MainWindow", "pcpng转换"))
